
Frontend things
1. can see and vote on the polls
-make the 2 requests to the backend to retrieve info on the question and the list of choices

[x] parametrize the list items into that will link into their own pages, questions/<id>

-make request to the back to get the choices for each question
-display the number of votes on each choice
-add in event handlers to vote for a choice

[ ] highlight proper tab, stuck in home
[ ] have some type of loader before the data is loaded in the page


Notes
On first render, data is being fetched, so it isn't available right away
to mitigate this, do {data.object && what you actually want to render}, this looks ugly..
also what forces the re-render once the data comes in?


User stories
[ ] As an unauthenticated or authenticated user, I can see and vote on everyone's polls.
[ ] As an authenticated user, I can create a poll with any number of possible items.

[ ] As an authenticated user, I can keep my polls and come back later to access them.
[ ] As an authenticated user, I can delete polls that I decide I don't want anymore.
[ ] As an authenticated user, if I don't like the options on a poll, I can create a new option.

[ ] As an unauthenticated or authenticated user, I can see the results of polls in chart form. 
	(This could be implemented using Chart.js or Google Charts.)

Stop and watch video again here

These 2 feel redundant
[ ] As an authenticated user, I can see the aggregate results of my polls.
[ ] As an authenticated user, I can share my polls with my friends.

